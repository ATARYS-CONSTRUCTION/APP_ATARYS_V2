"""Add type_taches table

Revision ID: b4a07a74122e
Revises: 876812c29caf
Create Date: 2025-07-22 18:36:40.206206

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b4a07a74122e'
down_revision = '876812c29caf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regles_echeance',
    sa.Column('code_regle', sa.String(length=50), nullable=False),
    sa.Column('nom_regle', sa.String(length=100), nullable=False),
    sa.Column('type_tache', sa.String(length=100), nullable=False),
    sa.Column('famille_tache', sa.String(length=50), nullable=False),
    sa.Column('delai_jours', sa.Integer(), nullable=True),
    sa.Column('delai_mois', sa.Integer(), nullable=True),
    sa.Column('delai_annees', sa.Integer(), nullable=True),
    sa.Column('reference_temporelle', sa.String(length=50), nullable=True),
    sa.Column('priorite', sa.String(length=20), nullable=True),
    sa.Column('statut_defaut', sa.String(length=30), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code_regle')
    )
    op.create_table('type_taches',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type_taches', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('famille_tach',
    sa.Column('famille_tache', sa.String(length=50), nullable=False),
    sa.Column('type_tache', sa.String(length=100), nullable=False),
    sa.Column('titre', sa.String(length=200), nullable=True),
    sa.Column('auto_generee', sa.Boolean(), nullable=True),
    sa.Column('declencheur', sa.String(length=50), nullable=True),
    sa.Column('regle_echeance_id', sa.Integer(), nullable=True),
    sa.Column('chantier_id', sa.String(length=50), nullable=True),
    sa.Column('id_famille_ouvrage', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_famille_ouvrage'], ['famille_ouvrages.id'], ),
    sa.ForeignKeyConstraint(['regle_echeance_id'], ['regles_echeance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taches_reelles',
    sa.Column('titre', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type_tache', sa.String(length=100), nullable=False),
    sa.Column('famille_tache', sa.String(length=50), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('date_echeance', sa.DateTime(), nullable=False),
    sa.Column('date_fin', sa.DateTime(), nullable=True),
    sa.Column('statut', sa.String(length=30), nullable=True),
    sa.Column('priorite', sa.String(length=20), nullable=True),
    sa.Column('salary_id', sa.Integer(), nullable=True),
    sa.Column('auto_generee', sa.Boolean(), nullable=True),
    sa.Column('declencheur', sa.String(length=50), nullable=True),
    sa.Column('regle_echeance_id', sa.Integer(), nullable=True),
    sa.Column('contexte', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['regle_echeance_id'], ['regles_echeance.id'], ),
    sa.ForeignKeyConstraint(['salary_id'], ['salaries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('clients')
    with op.batch_alter_table('villes', schema=None) as batch_op:
        batch_op.alter_column('communes',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('code_postal',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('latitude',
               existing_type=sa.FLOAT(),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('longitude',
               existing_type=sa.FLOAT(),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('distance_km_oiseau',
               existing_type=sa.FLOAT(),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('distance_km_routes',
               existing_type=sa.FLOAT(),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('temps_route_min',
               existing_type=sa.FLOAT(),
               type_=sa.String(length=20),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('villes', schema=None) as batch_op:
        batch_op.alter_column('temps_route_min',
               existing_type=sa.String(length=20),
               type_=sa.FLOAT(),
               existing_nullable=True)
        batch_op.alter_column('distance_km_routes',
               existing_type=sa.String(length=20),
               type_=sa.FLOAT(),
               existing_nullable=True)
        batch_op.alter_column('distance_km_oiseau',
               existing_type=sa.String(length=20),
               type_=sa.FLOAT(),
               existing_nullable=True)
        batch_op.alter_column('longitude',
               existing_type=sa.String(length=20),
               type_=sa.FLOAT(),
               existing_nullable=True)
        batch_op.alter_column('latitude',
               existing_type=sa.String(length=20),
               type_=sa.FLOAT(),
               existing_nullable=True)
        batch_op.alter_column('code_postal',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('communes',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('civilite', sa.VARCHAR(), nullable=True),
    sa.Column('nom', sa.VARCHAR(length=100), nullable=False),
    sa.Column('prenom', sa.VARCHAR(length=100), nullable=True),
    sa.Column('adresse', sa.VARCHAR(length=200), nullable=True),
    sa.Column('code_postal', sa.VARCHAR(length=10), nullable=True),
    sa.Column('num_telephone', sa.VARCHAR(length=20), nullable=True),
    sa.Column('email', sa.VARCHAR(length=200), nullable=True),
    sa.Column('siret', sa.VARCHAR(length=14), nullable=True),
    sa.Column('id_contact_google', sa.VARCHAR(length=100), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('ville_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['ville_id'], ['villes.id'], name=op.f('fk_clients_ville'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('taches_reelles')
    op.drop_table('famille_tach')
    op.drop_table('type_taches')
    op.drop_table('regles_echeance')
    # ### end Alembic commands ###
