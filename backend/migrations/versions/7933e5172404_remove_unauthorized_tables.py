"""Remove unauthorized tables

Revision ID: 7933e5172404
Revises: 6c196a181eea
Create Date: 2025-07-22 18:43:03.462302

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '7933e5172404'
down_revision = '6c196a181eea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_audit_table')
    op.drop_table('famille_tach')
    op.drop_table('regles_echeance')
    op.drop_table('type_taches')
    op.drop_table('taches_reelles')
    op.drop_table('test_cle2')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test_cle2',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('libelle', sa.VARCHAR(length=30), nullable=True),
    sa.Column('niveau_qualification_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['niveau_qualification_id'], ['niveau_qualification.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taches_reelles',
    sa.Column('titre', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('type_tache', sa.VARCHAR(length=100), nullable=False),
    sa.Column('famille_tache', sa.VARCHAR(length=50), nullable=False),
    sa.Column('date_creation', sa.DATETIME(), nullable=True),
    sa.Column('date_echeance', sa.DATETIME(), nullable=False),
    sa.Column('date_fin', sa.DATETIME(), nullable=True),
    sa.Column('statut', sa.VARCHAR(length=30), nullable=True),
    sa.Column('priorite', sa.VARCHAR(length=20), nullable=True),
    sa.Column('salary_id', sa.INTEGER(), nullable=True),
    sa.Column('auto_generee', sa.BOOLEAN(), nullable=True),
    sa.Column('declencheur', sa.VARCHAR(length=50), nullable=True),
    sa.Column('regle_echeance_id', sa.INTEGER(), nullable=True),
    sa.Column('contexte', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['regle_echeance_id'], ['regles_echeance.id'], ),
    sa.ForeignKeyConstraint(['salary_id'], ['salaries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('type_taches',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('type_taches', sa.VARCHAR(length=100), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('regles_echeance',
    sa.Column('code_regle', sa.VARCHAR(length=50), nullable=False),
    sa.Column('nom_regle', sa.VARCHAR(length=100), nullable=False),
    sa.Column('type_tache', sa.VARCHAR(length=100), nullable=False),
    sa.Column('famille_tache', sa.VARCHAR(length=50), nullable=False),
    sa.Column('delai_jours', sa.INTEGER(), nullable=True),
    sa.Column('delai_mois', sa.INTEGER(), nullable=True),
    sa.Column('delai_annees', sa.INTEGER(), nullable=True),
    sa.Column('reference_temporelle', sa.VARCHAR(length=50), nullable=True),
    sa.Column('priorite', sa.VARCHAR(length=20), nullable=True),
    sa.Column('statut_defaut', sa.VARCHAR(length=30), nullable=True),
    sa.Column('actif', sa.BOOLEAN(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code_regle')
    )
    op.create_table('famille_tach',
    sa.Column('famille_tache', sa.VARCHAR(length=50), nullable=False),
    sa.Column('type_tache', sa.VARCHAR(length=100), nullable=False),
    sa.Column('titre', sa.VARCHAR(length=200), nullable=True),
    sa.Column('auto_generee', sa.BOOLEAN(), nullable=True),
    sa.Column('declencheur', sa.VARCHAR(length=50), nullable=True),
    sa.Column('regle_echeance_id', sa.INTEGER(), nullable=True),
    sa.Column('chantier_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('id_famille_ouvrage', sa.INTEGER(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['id_famille_ouvrage'], ['famille_ouvrages.id'], ),
    sa.ForeignKeyConstraint(['regle_echeance_id'], ['regles_echeance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_audit_table',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), nullable=True),
    sa.Column('prix', sa.FLOAT(), nullable=True),
    sa.Column('actif', sa.BOOLEAN(), nullable=True),
    sa.Column('date_creation', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
